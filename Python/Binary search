A binary search is an algorithm to find a particular element in the list. 
Suppose we have a list of thousand elements, and we need to get an index position of a particular element. 
We can find the element's index position very fast using the binary search algorithm.
There are many searching algorithms but the binary search is most popular among them.
The elements in the list must be sorted to apply the binary search algorithm. 
If elements are not sorted then sort them first.

def binary_search(arr, target):
    low, high = 0, len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return -1  # n
 
arr=[1,2,3,4,5,6,7,8,9,10]
target=4
result=binary_search(arr,target)
if result != -1:
    print("Element is present at index",result)
else:
    print("Not found")


Aspect	Linear Search	Binary Search
Methodology	Checks each element sequentially until a match is found.	Divides the dataset into halves and eliminates half with each comparison.
Data Requirement	Works on unsorted or sorted datasets.	Requires the dataset to be sorted.
