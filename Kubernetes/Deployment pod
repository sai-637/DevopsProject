controlplane $ vi deploy.yml
controlplane $ kubectl create -f deploy.yml
deployment.apps/my-deployment created
controlplane $ kubectl get pods
NAME                             READY   STATUS              RESTARTS   AGE
my-deployment-56fb9fb7fc-2xc5l   0/1     ContainerCreating   0          10s
my-deployment-56fb9fb7fc-f5bg6   0/1     ContainerCreating   0          10s
my-deployment-56fb9fb7fc-g8wdr   0/1     ContainerCreating   0          10s
controlplane $ kubectl delete pod my-deployment-56fb9fb7fc-g8wdr
pod "my-deployment-56fb9fb7fc-g8wdr" deleted
controlplane $ kubectl get pods
NAME                             READY   STATUS    RESTARTS   AGE
my-deployment-56fb9fb7fc-2xc5l   1/1     Running   0          50s
my-deployment-56fb9fb7fc-f5bg6   1/1     Running   0          50s
my-deployment-56fb9fb7fc-stcnt   1/1     Running   0          12s
controlplane $ kubectl delete deployment/my-deployment-56fb9fb7fc-stcnt
Error from server (NotFound): deployments.apps "my-deployment-56fb9fb7fc-stcnt" not found
controlplane $ kubectl delete deployment.apps/my-deployment-56fb9fb7fc-stcnt
Error from server (NotFound): deployments.apps "my-deployment-56fb9fb7fc-stcnt" not found
controlplane $ kubectl get deployment                                       
NAME            READY   UP-TO-DATE   AVAILABLE   AGE
my-deployment   3/3     3            3           8m38s
controlplane $ kubectl set image deployment/my-deployment nginx=nginx:latest
error: unable to find container named "nginx"
controlplane $ kubectl set image deployment/my-deployment my-container=nginx:latest
deployment.apps/my-deployment image updated
controlplane $ kubectl get all
NAME                                 READY   STATUS    RESTARTS   AGE
pod/my-deployment-6d45fc889b-6lkrq   1/1     Running   0          9s
pod/my-deployment-6d45fc889b-b55td   1/1     Running   0          11s
pod/my-deployment-6d45fc889b-sf6r2   1/1     Running   0          7s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   14d

NAME                            READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/my-deployment   3/3     3            3           14m

NAME                                       DESIRED   CURRENT   READY   AGE
replicaset.apps/my-deployment-56fb9fb7fc   0         0         0       14m
replicaset.apps/my-deployment-6d45fc889b   3         3         3       11s
controlplane $ kubectl rollout undo deployment/my-deployment
deployment.apps/my-deployment rolled back
controlplane $ kubectl get all
NAME                                 READY   STATUS    RESTARTS   AGE
pod/my-deployment-56fb9fb7fc-fv9d9   1/1     Running   0          8s
pod/my-deployment-56fb9fb7fc-nrx54   1/1     Running   0          6s
pod/my-deployment-56fb9fb7fc-qhfvk   1/1     Running   0          10s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   14d

NAME                            READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/my-deployment   3/3     3            3           18m

NAME                                       DESIRED   CURRENT   READY   AGE
replicaset.apps/my-deployment-56fb9fb7fc   3         3         3       18m
replicaset.apps/my-deployment-6d45fc889b   0         0         0       4m7s
controlplane $ kubectl get replicaset
NAME                       DESIRED   CURRENT   READY   AGE
my-deployment-56fb9fb7fc   3         3         3       20m
my-deployment-6d45fc889b   0         0         0       6m
controlplane $ vi deploy.yml
controlplane $ kubectl get all
NAME                                 READY   STATUS    RESTARTS   AGE
pod/my-deployment-56fb9fb7fc-fv9d9   1/1     Running   0          15m
pod/my-deployment-56fb9fb7fc-nrx54   1/1     Running   0          15m
pod/my-deployment-56fb9fb7fc-qhfvk   1/1     Running   0          15m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   14d

NAME                            READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/my-deployment   3/3     3            3           33m

NAME                                       DESIRED   CURRENT   READY   AGE
replicaset.apps/my-deployment-56fb9fb7fc   3         3         3       33m
replicaset.apps/my-deployment-6d45fc889b   0         0         0       19m
controlplane $ kubectl apply -f deploy.yml
Warning: resource deployments/my-deployment is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
deployment.apps/my-deployment configured
controlplane $ kubectl get all
NAME                                 READY   STATUS              RESTARTS   AGE
pod/my-deployment-56fb9fb7fc-fv9d9   1/1     Running             0          16m
pod/my-deployment-56fb9fb7fc-nrx54   1/1     Running             0          15m
pod/my-deployment-56fb9fb7fc-qhfvk   1/1     Running             0          16m
pod/my-deployment-fb769fbf-5jk42     0/1     ContainerCreating   0          4s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   14d

NAME                            READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/my-deployment   3/3     1            3           34m

NAME                                       DESIRED   CURRENT   READY   AGE
replicaset.apps/my-deployment-56fb9fb7fc   3         3         3       34m
replicaset.apps/my-deployment-6d45fc889b   0         0         0       20m
replicaset.apps/my-deployment-fb769fbf     1         1         0       4s
controlplane $ kubectl describe pod/my-deployment-fb769fbf-5jk42
Name:             my-deployment-fb769fbf-5jk42
Namespace:        default
Priority:         0
Service Account:  default
Node:             controlplane/172.30.1.2
Start Time:       Thu, 18 Jul 2024 15:18:38 +0000
Labels:           app=my-app
                  pod-template-hash=fb769fbf
Annotations:      cni.projectcalico.org/containerID: f0f245b611b27ff1237f370b198e395981d19e7e88825aa19d73a136a26ffe5a
                  cni.projectcalico.org/podIP: 192.168.0.16/32
                  cni.projectcalico.org/podIPs: 192.168.0.16/32
Status:           Pending
IP:               192.168.0.16
IPs:
  IP:           192.168.0.16
Controlled By:  ReplicaSet/my-deployment-fb769fbf
Containers:
  my-container:
    Container ID:   
    Image:          nginx/v1
    Image ID:       
    Port:           80/TCP
    Host Port:      0/TCP
    State:          Waiting
      Reason:       ErrImagePull
    Ready:          False
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5ts84 (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       False 
  ContainersReady             False 
  PodScheduled                True 
Volumes:
  kube-api-access-5ts84:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                From               Message
  ----     ------     ----               ----               -------
  Normal   Scheduled  57s                default-scheduler  Successfully assigned default/my-deployment-fb769fbf-5jk42 to controlplane
  Normal   Pulling    33s (x2 over 56s)  kubelet            Pulling image "nginx/v1"
  Warning  Failed     25s (x2 over 47s)  kubelet            Failed to pull image "nginx/v1": failed to pull and unpack image "docker.io/nginx/v1:latest": failed to resolve reference "docker.io/nginx/v1:latest": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
  Warning  Failed     25s (x2 over 47s)  kubelet            Error: ErrImagePull
  Normal   BackOff    12s (x2 over 47s)  kubelet            Back-off pulling image "nginx/v1"
  Warning  Failed     12s (x2 over 47s)  kubelet            Error: ImagePullBackOff
controlplane $ vi deploy.yml
controlplane $ kubectl apply -f deploy.yml
deployment.apps/my-deployment configured
controlplane $ kubectl get all
NAME                                 READY   STATUS    RESTARTS   AGE
pod/my-deployment-56fb9fb7fc-fv9d9   1/1     Running   0          20m
pod/my-deployment-56fb9fb7fc-nrx54   1/1     Running   0          20m
pod/my-deployment-56fb9fb7fc-qhfvk   1/1     Running   0          20m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   14d

NAME                            READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/my-deployment   3/3     3            3           38m

NAME                                       DESIRED   CURRENT   READY   AGE
replicaset.apps/my-deployment-56fb9fb7fc   3         3         3       38m
replicaset.apps/my-deployment-6d45fc889b   0         0         0       24m
replicaset.apps/my-deployment-fb769fbf     0         0         0       4m26s
controlplane $ 



kubectl get pods webapp-daemonset-79m8x -o jsonpath='{.spec.containers[*].name}' ---->To get a container name inside a pod


vi deploy.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-container
        image: nginx
        ports:
        - containerPort: 80
