Replication Controller is the older technology that is being replaced by a ReplicaSet.
ReplicaSet is the new way to setup replication.In Kubernetes, a ReplicaSet is a higher-level abstraction over a ReplicationController. 

 Its primary function is to maintain a stable set of replica pods, automatically replacing any that fail or are deleted.

A ReplicaSet's configuration defines the number of Pods required, and if a Pod fails or is evicted, it creates more Pods to make up for the loss. 
Scaling
You can scale an application up or down by changing the number of replicas in the configuration file or using the command line. 
It ensures that a specified number of replicas (identical copies) of a Pod are running at any given time.

A ReplicaSet automatically handles Pod management, including creating, scaling, and restarting pods, 
to maintain the desired level of replicas. This allows developers to define the desired state of their application and the Kubernetes
control plane ensures that the state is maintained. ReplicaSets provide greater flexibility and scalability compared 
to ReplicationControllers, making them a preferred choice for managing production workloads.

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: my-replicaset
spec:
  replicas: 3  # Number of pod replicas
  selector:
    matchLabels:
      app: my-app  # Label to match
  template:
    metadata:
      labels:
        app: my-app  # Label to apply to pods
    spec:
      containers:
      - name: my-container
        image: nginx







