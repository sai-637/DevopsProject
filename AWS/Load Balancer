A load balancer in AWS is a service that distributes incoming traffic across multiple targets, such as EC2 instances, containers, or lambda functions.
This helps to improve the reliability, scalability, and performance of your application by ensuring that no single instance or resource is overwhelmed with traffic. 
AWS offers three types of load balancers: Application Load Balancer (ALB), Network Load Balancer (NLB), and Classic Load Balancer (CLB). 
Each type is designed for specific use cases and can be used to route traffic to different types of targets.

A load balancer serves as the single point of contact for clients.
The load balancer distributes incoming application traffic across multiple targets, such as EC2 instances, in multiple Availability Zones. 
This increases the availability of your application. You add one or more listeners to your load balancer.

A load balancer in AWS is a service that helps distribute traffic across multiple servers to improve the responsiveness and availability of a website or application.
It ensures that no single server becomes overwhelmed, reducing the risk of downtime and errors. 
AWS offers two types of load balancers: Application Load Balancer and Network Load Balancer. 
Application Load Balancer is designed for Layer 7 traffic and is suitable for web applications, 
while Network Load Balancer is designed for Layer 4 traffic and is suitable for large-scale applications. 
Both load balancers can be deployed in various regions and Availability Zones.
#################################################################################
Load balancers improve application performance by increasing response time and reducing network latency.

Elastic Load Balancing automatically distributes your incoming traffic across multiple targets, such as EC2 instances, 
containers, and IP addresses, in one or more Availability Zones.

#####################################################

Top 4 open-source load balancers:

Traefik. Traefik is a popular open-source edge router and load balancer that makes it easy to expose applications and services running in a network to the internet. ...
Nginx. NGINX is a popular open-source web server and reverse proxy that can also be used as a load balancer. ...
Seesaw. ...
HAProxy.

########################################################


Steps to Create an Application Load Balancer (ALB)
1. Log in to the AWS Management Console
Open the AWS Management Console.

2. Navigate to the EC2 Dashboard
In the AWS Management Console, type "EC2" in the search bar and select EC2.

3. Open the Load Balancers Page
In the left-hand navigation pane, under Load Balancing, select Load Balancers.

4. Create a New Load Balancer
Click the Create Load Balancer button.

5. Select Load Balancer Type
Choose Application Load Balancer and click Create.

6. Configure Basic Settings
Name: Enter a name for your load balancer.
Scheme: Choose whether you want an Internet-facing or internal load balancer.
IP address type: Select either IPv4 or Dualstack (IPv4 and IPv6).

7. Configure Listeners and Availability Zones
Listeners: By default, a listener on port 80 (HTTP) is created. You can add an HTTPS listener if needed.
Availability Zones: Select the VPC and the Availability Zones where you want the load balancer to route traffic.

8. Configure Security Settings
If you added an HTTPS listener, you need to select an SSL/TLS certificate. You can use AWS Certificate Manager (ACM) to manage your certificates.

9. Configure Security Groups
Select an existing security group or create a new one to control traffic to the load balancer.

10. Configure Routing
Target group: Create a new target group or select an existing one.
Target group name: Enter a name for the target group.
Protocol: Choose HTTP or HTTPS.
Target type: Choose between instance, IP, or Lambda function.
Health checks: Configure health check settings to monitor the health of your targets.

11. Register Targets
Add the instances you want to include in the target group.

12. Review and Create
Review your settings and click Create.

13. Test the Load Balancer
After the load balancer is created, note the DNS name. You can use this DNS name to test the load balancer by accessing it in your web browser.
Additional Considerations
Auto Scaling: Consider setting up an Auto Scaling group to automatically add or remove instances based on demand.
HTTPS Termination: If you are using HTTPS, ensure that you properly configure SSL termination and that your certificates are correctly installed.
Monitoring: Use Amazon CloudWatch to monitor the health and performance of your load balancer.
Using AWS CLI or SDKs
If you prefer to use the AWS CLI or SDKs (e.g., Boto3 for Python), you can automate the creation of load balancers and related resources by writing scripts.


What is the main function of NIC card?
A NIC provides a computer with a dedicated, full-time connection to a network. 
It implements the physical layer circuitry necessary for communicating with a data link layer standard, such as Ethernet or Wi-Fi.
Each card represents a device and can prepare, transmit and control the flow of data on the network.

